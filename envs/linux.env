[vars]
# host and port to launch rest web server on
NIOHOST: 0.0.0.0
NIOPORT: 8787

# Path to project root, leave blank to auto detect - it will use the root
# specified when running the binary (passed with -r or --root)
PROJECT_ROOT:

INSTANCE_NAME: dni_client
INSTANCE_ID: dni_client
INSTANCE_TAG: server|internal
PROJECT_URL:

# Pubkeeper Client
PK_TOKEN:eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJwZXJtIjpbImFsbCJdLCJzdWIiOiJkZW1vIiwiaXNzIjoicHVia2VlcGVyIiwiYXVkIjoicHVia2VlcGVyIn0.8Py05eBVPj6H40FxT85XR8rr-3XV7EmZmdqUTrjwF5U
PK_HOST:demo.niolabs.com
PK_PORT: 9898
PK_SECURE: False
PK_CA_CHAIN:

# WebsocketBrew Variables
WS_HOST:ws.demo.niolabs.com
WS_PORT:443
WS_SECURE:True

#Pubkeeper Server
PKS_JWT_SECRET:
PKS_ADDR:
PKS_INTERFACE:
PKS_PORT:

# ZMQ / ZMQBrew Variables
# your IP address that other nodes can reach you on
NETWORK_INTERFACE: eth0

# ZMQ Encryption settings
# optional comma separated list of allowed ip addresses, if none specified,
# this extra layer of security is not enforced.
# This setting will only take effect if the key encryption is enabled with
# the settings below.
ALLOWED_IP_ADDRESSES=

# used for zmq strongest security model
# This is a setting that must be set on an instance containing publishers.
# Every subscriber's public key should go in this directory.
# The public keys for each subscriber should be paired with the subscriber's
# secret that is set on that host's CLIENT_SECRET_CERT
PUBLISHER_PUBLIC_KEYS_DIR=

# publisher server-like certificates
# The publisher instance must set it's server secret key.
# All subscriber nodes only need to set the server's public key.
PUBLISHER_SERVER_PUBLIC_CERT=
PUBLISHER_SERVER_SECRET_CERT=

# subscriber client-like certificates
# This client's secret key. This will be paired with the public key
# that should be copied to the broker instance's public keys folder
SUBSCRIBER_CLIENT_SECRET_CERT=

# ZMQ based communication module - Legacy

# the ip address of the master broker
COMHOST: 127.0.0.1
# Are you the broker?
MASTER_BROKER: True
# ports used by master broker to communicate with its clients
XPUB_PORT: 9000
XSUB_PORT: 9001
