{
  "nio/MergeStreams": {
    "version": "0.1.0",
    "description": "Take two input streams and merge the signals into one.  If the signals have matching attributes (that aren't the group_by property) then the input_2 signal's attribute will take priority.",
    "categories": [
      "Signal Modifier"
    ],
    "properties": {
      "backup_interval": {
        "title": "Backup Interval",
        "type": "TimeDeltaType",
        "description": "How often to periodically save (backup) the persisted signal and interval.",
        "default": {
          "seconds": 3600
        }
      },
      "expiration": {
        "title": "Stream Expiration",
        "type": "TimeDeltaType",
        "description": "Length of time to store signal before dropping it.",
        "default": {}
      },
      "group_by": {
        "title": "Group By",
        "type": "Type",
        "description": "Signals from the two inputs are merged based on matching group attributes.",
        "default": null
      },
      "load_from_persistence": {
        "title": "Load from Persistence?",
        "type": "BoolType",
        "description": "If the block is stopped, load the block's previous state upon restart.",
        "default": true
      },
      "notify_once": {
        "title": "Notify Once?",
        "type": "BoolType",
        "description": "Remove signal from block after it is notified.",
        "default": true
      }
    },
    "inputs": {
      "input_1": {
        "description": "Any list of signals."
      },
      "input_2": {
        "description": "Any list of signals."
      }
    },
    "outputs": {
      "default": {
        "description": "A new signal that is the merged version of one signal from input 1 and one signal from input 2."
      }
    },
    "commands": {
      "groups": {
        "description": "Display all the current groupings of the signals.",
        "params": {}
      }
    }
  }
}